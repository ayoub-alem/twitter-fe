[{"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\index.js":"1","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\reportWebVitals.js":"2","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\App.js":"3","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\services\\httpService.js":"4","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\services\\serverPath.js":"5","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\signup.jsx":"6","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\input.jsx":"7","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\select.jsx":"8","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\signupPic.jsx":"9","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\services\\auth.js":"10","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\subject.jsx":"11","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\services\\getSubjects.js":"12","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\user.jsx":"13","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\services\\getSuggestedUsers.js":"14","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\home.jsx":"15","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\sideBar.jsx":"16","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\redirectToHome.jsx":"17","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\homeHead.jsx":"18","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\post.jsx":"19","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\services\\getPosts.js":"20","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\login.jsx":"21","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\flux.jsx":"22","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\followNewUsers.jsx":"23","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\services\\getRetweetedPosts.js":"24","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\retweetedPost.jsx":"25","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\services\\picturesPath.js":"26"},{"size":593,"mtime":1611435668819,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":720,"mtime":1611793133436,"results":"30","hashOfConfig":"28"},{"size":1318,"mtime":1611315406278,"results":"31","hashOfConfig":"28"},{"size":152,"mtime":1611995350320,"results":"32","hashOfConfig":"28"},{"size":9498,"mtime":1611797785629,"results":"33","hashOfConfig":"28"},{"size":2474,"mtime":1611793154574,"results":"34","hashOfConfig":"28"},{"size":1257,"mtime":1612024297319,"results":"35","hashOfConfig":"28"},{"size":17440,"mtime":1612024338852,"results":"36","hashOfConfig":"28"},{"size":290,"mtime":1611501839876,"results":"37","hashOfConfig":"28"},{"size":283,"mtime":1611361780053,"results":"38","hashOfConfig":"28"},{"size":347,"mtime":1611354173700,"results":"39","hashOfConfig":"28"},{"size":820,"mtime":1612024345129,"results":"40","hashOfConfig":"28"},{"size":326,"mtime":1611411318362,"results":"41","hashOfConfig":"28"},{"size":979,"mtime":1611784567963,"results":"42","hashOfConfig":"28"},{"size":3283,"mtime":1611872622675,"results":"43","hashOfConfig":"28"},{"size":536,"mtime":1611797777621,"results":"44","hashOfConfig":"28"},{"size":2370,"mtime":1611851716995,"results":"45","hashOfConfig":"28"},{"size":1931,"mtime":1611851757033,"results":"46","hashOfConfig":"28"},{"size":345,"mtime":1611626643518,"results":"47","hashOfConfig":"28"},{"size":3029,"mtime":1611797737316,"results":"48","hashOfConfig":"28"},{"size":6965,"mtime":1612051766776,"results":"49","hashOfConfig":"28"},{"size":3906,"mtime":1612024272241,"results":"50","hashOfConfig":"28"},{"size":354,"mtime":1611843908449,"results":"51","hashOfConfig":"28"},{"size":2088,"mtime":1611939679870,"results":"52","hashOfConfig":"28"},{"size":162,"mtime":1611995343693,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1div4f1",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\index.js",[],["111","112"],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\reportWebVitals.js",[],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\App.js",[],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\services\\httpService.js",[],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\services\\serverPath.js",[],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\signup.jsx",[],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\input.jsx",[],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\select.jsx",["113"],"import React, { useState } from 'react';\r\nimport \"./../css/select.css\";\r\nimport \"./../css/signup.css\"\r\n\r\nfunction Select({ placeholdeSpan, options, name, handleChange, value }) {\r\n\r\n\r\n\r\n    const [focus, changeState] = useState(false);\r\n\r\n    const setFocus = (e) => {\r\n        e.target.classList.add(\"changeSelectBorderColor\");\r\n        e.target.parentNode.firstChild.classList.add(\"changeSpanColor\");\r\n        changeState(true);\r\n    }\r\n\r\n    const setBlur = (e) => {\r\n        if (!e.target.value) {\r\n            e.target.classList.remove(\"changeSelectBorderColor\");\r\n            e.target.parentNode.firstChild.classList.remove(\"changeSpanColor\");\r\n            changeState(false);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"div--select\">\r\n            <span className=\"input--placeholder select--placeholder\">{placeholdeSpan}</span>\r\n            <select onChange={(e)=> handleChange(e)} value={value} name={name} onFocus={(e) => setFocus(e)} onBlur={(e) => setBlur(e)} className=\"select--element\">\r\n                {options.map((obj) => {\r\n                    return (<option key={obj.value} value={obj.value}>{obj.label}</option>);\r\n                })}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select;","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\signupPic.jsx",["114"],"import React, { useState, useEffect, useRef, Fragment } from 'react';\r\nimport Joi from 'joi';\r\nimport { Redirect } from 'react-router-dom';\r\nimport http, { cookies } from './../services/httpService.js';\r\nimport serverPath from './../services/serverPath.js';\r\nimport { getUser } from './../services/auth.js';\r\nimport getSubjects from '../services/getSubjects.js';\r\nimport Subject from './subject.jsx';\r\nimport Input from './input';\r\nimport User from './user.jsx';\r\nimport getSuggestedUsers from '../services/getSuggestedUsers.js';\r\nimport { toast } from 'react-toastify';\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport \"./../css/signup.css\";\r\nimport \"./../css/signupPic.css\";\r\nimport picturesPath from '../services/picturesPath.js';\r\n\r\nlet globalSchema = Joi.object({\r\n    description: Joi.string().allow(\"\").max(160).label(\"Description\").min(0)\r\n});\r\n\r\n\r\nconst photoToSend = (fileRef) => {\r\n    const data = new FormData();\r\n    const user = getUser();\r\n    data.append(\"photo\", fileRef.current.files[0]);\r\n    data.append(\"user_id\", user.user_id);\r\n    return data;\r\n}\r\nconst followToSend = (prop, value) => {\r\n    const data = new FormData();\r\n    data.append(prop, value);\r\n    return data;\r\n}\r\nconst bioToSend = (state) => {\r\n    const data = new URLSearchParams();\r\n    const user = getUser();\r\n    data.append(\"description\", state.description);\r\n    data.append(\"user_id\", user.user_id);\r\n    return data;\r\n}\r\n\r\nconst subjectsToSend = (state) => {\r\n    return {\r\n        sujets: [...state.selectedSubjects]\r\n    };\r\n}\r\n\r\nconst changeColorToRed = (currentTarget, errors) => {\r\n    if (errors) {\r\n        currentTarget.classList.add(\"active--input--wrong\");\r\n        currentTarget.parentNode.firstChild.classList.add(\"active--input--placeholder--wrong\");\r\n    } else {\r\n        currentTarget.classList.remove(\"active--input--wrong\");\r\n        currentTarget.parentNode.firstChild.classList.remove(\"active--input--placeholder--wrong\");\r\n    }\r\n}\r\n\r\n\r\nconst getSchemaValue = (inputName, schema) => {\r\n    for (let key of schema._ids._byKey.entries()) {\r\n        if (key[1].id === inputName) return key[1].schema;\r\n    }\r\n}\r\n\r\nconst validate = (input) => {\r\n    const obj = { [input.name]: input.value };\r\n    const schema = Joi.object({ [input.name]: getSchemaValue(input.name, globalSchema) });\r\n    let { error } = schema.validate(obj, { abortEarly: false });\r\n    return error ? error.details[0].message : null;\r\n}\r\n\r\n\r\nexport default function SignupPic({ location }) {\r\n\r\n    const [suivant, setSuivant] = useState(0);\r\n    const [disabledPicPhase, setPicPhase] = useState(false);\r\n    const [state, setState] = useState({ photo: false, render: false, suggestedUsers: [], description: \"\", subjects: [], selectedSubjects: [], errors: { description: \"\" } });\r\n    const fileRef = useRef();\r\n    const imageRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (getUser()) {\r\n            if (getUser().completed === \"0\") {\r\n                const fetchSubjects = async () => {\r\n                    const subjects = await getSubjects();\r\n                    setState(prevState => {\r\n                        return {\r\n                            ...prevState,\r\n                            subjects\r\n                        }\r\n                    })\r\n                };\r\n                const fetchSuggestedUsers = async () => {\r\n                    const suggestedUsers = await getSuggestedUsers();\r\n                    setState(prevState => {\r\n                        return {\r\n                            ...prevState,\r\n                            suggestedUsers\r\n                        }\r\n                    })\r\n                };\r\n                fetchSubjects();\r\n                fetchSuggestedUsers();\r\n            }\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    const handleSelectSubject = (e) => {\r\n        if (e.currentTarget.classList.contains(\"subject--active\")) {\r\n            e.currentTarget.classList.remove(\"subject--active\");\r\n            const subjectValue = e.currentTarget.id\r\n            setState(prevState => {\r\n                let selectedSubjects = prevState.selectedSubjects.filter((value) => value !== subjectValue);\r\n                return { ...prevState, selectedSubjects: selectedSubjects };\r\n            });\r\n        } else {\r\n            e.currentTarget.classList.add(\"subject--active\");\r\n            const subjectValue = e.currentTarget.id;\r\n            setState(prevState => {\r\n                return {\r\n                    ...prevState, selectedSubjects: [...prevState.selectedSubjects, subjectValue],\r\n                }\r\n            })\r\n        }\r\n    }\r\n    const appliquerOuPasser = (suivant) => {\r\n        if (suivant === 0 && state.photo) {\r\n            return true;\r\n        }\r\n        else if (suivant === 0 && !state.photo) {\r\n            return false;\r\n        } else if (suivant === 1 && state.description !== \"\") {\r\n            return true\r\n        } else if (suivant === 1 && state.description === \"\") {\r\n            return false\r\n        } else if (suivant === 2 && (state.selectedSubjects.length === 0)) {\r\n            return false\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const disableSuivantButton = () => {\r\n        let disableState = { ...state.errors };\r\n        for (let prop in disableState) {\r\n            if (!(disableState[prop] === null || disableState[prop] === \"\" || state.description === \"\")) return \"disabled\";\r\n        }\r\n        return false\r\n    }\r\n\r\n    const setClick = async () => {\r\n        if (suivant === 0 && state.photo) {\r\n            setPicPhase(true);\r\n            try {\r\n                const { data, headers } = await http.post(\r\n                    serverPath + 'signup_photo.php',\r\n                    photoToSend(fileRef),\r\n                    http.urlEncoded(cookies.get(\"x-auth-token\"))\r\n                );\r\n                toast.success(data);\r\n                if (headers['x-auth-token']) {\r\n                    cookies.remove(\"x-auth-token\");\r\n                    cookies.set('x-auth-token', headers['x-auth-token'], {\r\n                        path: '/',\r\n                        maxAge: 3600 * 24 * 30 * 12\r\n                    });\r\n                }\r\n                setSuivant(prevSuivant => prevSuivant === 3 ? prevSuivant : prevSuivant + 1);\r\n                setPicPhase(false);\r\n                console.log(headers['x-auth-token']);\r\n            } catch (error) {\r\n                toast.error(error.response)\r\n                setPicPhase(false);\r\n            }\r\n\r\n        } else if (suivant === 0 && !state.photo) {\r\n            setSuivant(prevSuivant => prevSuivant === 3 ? prevSuivant : prevSuivant + 1);\r\n        } else if (suivant === 1 && state.description) {\r\n            setPicPhase(true);\r\n            try {\r\n                const { data, headers } = await http.post(\r\n                    serverPath + 'signup_bio.php',\r\n                    bioToSend(state),\r\n                    http.urlEncoded(cookies.get(\"x-auth-token\"))\r\n                );\r\n                toast.success(data);\r\n                if (headers['x-auth-token']) {\r\n                    cookies.remove(\"x-auth-token\");\r\n                    cookies.set('x-auth-token', headers['x-auth-token'], {\r\n                        path: '/',\r\n                        maxAge: 3600 * 24 * 30 * 12\r\n                    });\r\n                }\r\n                setSuivant(prevSuivant => prevSuivant === 3 ? prevSuivant : prevSuivant + 1);\r\n                setPicPhase(false);\r\n                console.log(headers['x-auth-token']);\r\n            } catch (error) {\r\n                setPicPhase(false);\r\n                toast.error(error.response)\r\n            }\r\n\r\n        } else if (suivant === 1 && !state.description) {\r\n            setSuivant(prevSuivant => prevSuivant === 3 ? prevSuivant : prevSuivant + 1);\r\n        }\r\n        else if (suivant === 2 && !state.selectedSubjects.length) {\r\n            setSuivant(prevSuivant => prevSuivant === 3 ? prevSuivant : prevSuivant + 1);\r\n        }\r\n        else if (suivant === 2 && state.selectedSubjects.length) {\r\n            setPicPhase(true);\r\n            try {\r\n                const { data, headers } = await http.post(\r\n                    serverPath + 'signup_sujets.php',\r\n                    subjectsToSend(state),\r\n                    http.configJson(cookies.get(\"x-auth-token\"))\r\n                );\r\n                toast.success(data);\r\n                if (headers['x-auth-token']) {\r\n                    cookies.remove(\"x-auth-token\");\r\n                    cookies.set('x-auth-token', headers['x-auth-token'], {\r\n                        path: '/',\r\n                        maxAge: 3600 * 24 * 30 * 12\r\n                    });\r\n                }\r\n                setPicPhase(false);\r\n                setSuivant(prevSuivant => prevSuivant === 3 ? prevSuivant : prevSuivant + 1);\r\n                console.log(headers['x-auth-token']);\r\n            } catch (error) {\r\n                setPicPhase(false);\r\n                toast.error(error.response)\r\n            }\r\n        }\r\n        else if (suivant === 3) {\r\n            setPicPhase(true);\r\n            try {\r\n                const { data, headers } = await http.get(\r\n                    serverPath + 'signup_completed.php',\r\n                    http.urlEncoded(cookies.get(\"x-auth-token\"))\r\n                );\r\n                toast.success(data);\r\n                if (headers['x-auth-token']) {\r\n                    cookies.remove(\"x-auth-token\");\r\n                    cookies.set('x-auth-token', headers['x-auth-token'], {\r\n                        path: '/',\r\n                        maxAge: 3600 * 24 * 30 * 12\r\n                    });\r\n                }\r\n\r\n                console.log(headers['x-auth-token']);\r\n                setSuivant(prevSuivant => prevSuivant === 3 ? prevSuivant : prevSuivant + 1);\r\n                setPicPhase(false);\r\n                setState(prevState => {\r\n                    return {\r\n                        ...prevState, render: true\r\n                    }\r\n                })\r\n            } catch (error) {\r\n                setPicPhase(false);\r\n                toast.error(error.response)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const setChange = ({ currentTarget: input }) => {\r\n        let name = input.name;\r\n        let value = input.value;\r\n        setState(state => {\r\n            let prevState = { ...state };\r\n            prevState[name] = value;\r\n            return prevState;\r\n        });\r\n        changeColorToRed(input, validate(input));\r\n        setState(state => {\r\n            let prevState = { ...state };\r\n            prevState.errors[name] = validate(input);\r\n            return prevState;\r\n        });\r\n    }\r\n\r\n    const handleImage = () => {\r\n        let input = fileRef.current;\r\n        if (input.files && input.files[0]) {\r\n            setState(state => {\r\n                const prevState = { ...state };\r\n                prevState.photo = true;\r\n                return prevState;\r\n            })\r\n            var reader = new FileReader();\r\n            reader.onload = (e) => imageRef.current.src = e.target.result;\r\n            reader.readAsDataURL(input.files[0]);\r\n        }\r\n    }\r\n    const onSuivre = async (e) => {\r\n        let target = e.currentTarget;\r\n        if (e.currentTarget.classList.contains(\"suivre--active\")) {\r\n            e.currentTarget.classList.remove(\"suivre--active\");\r\n            e.currentTarget.innerHTML = \"Suivre\";\r\n            let unfollowed_id = e.currentTarget.id;\r\n            try {\r\n                const { data, headers } = await http.post(\r\n                    serverPath + 'abandonne.php',\r\n                    followToSend(\"unfollowed_id\", unfollowed_id),\r\n                    http.urlEncoded(cookies.get(\"x-auth-token\"))\r\n                );\r\n                toast.success(data);\r\n                if (headers['x-auth-token']) {\r\n                    cookies.remove(\"x-auth-token\");\r\n                    cookies.set('x-auth-token', headers['x-auth-token'], {\r\n                        path: '/',\r\n                        maxAge: 3600 * 24 * 30 * 12\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                e.currentTarget.classList.add(\"suivre--active\");\r\n                e.currentTarget.innerHTML = \"Abonné\";\r\n                toast.error(error.response);\r\n            }\r\n        } else {\r\n            let target = e.currentTarget;\r\n            target.classList.add(\"suivre--active\");\r\n            e.currentTarget.innerHTML = \"Abonné\";\r\n            let followed_id = target.id;\r\n            try {\r\n                const { data, headers } = await http.post(\r\n                    serverPath + 'suivre.php',\r\n                    followToSend(\"followed_id\", followed_id),\r\n                    http.urlEncoded(cookies.get(\"x-auth-token\"))\r\n                );\r\n                toast.success(data);\r\n                if (headers['x-auth-token']) {\r\n                    cookies.remove(\"x-auth-token\");\r\n                    cookies.set('x-auth-token', headers['x-auth-token'], {\r\n                        path: '/',\r\n                        maxAge: 3600 * 24 * 30 * 12\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                target.classList.remove(\"suivre--active\");\r\n                target.innerHTML = \"Suivre\";\r\n                toast.error(error.response);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {(state.render && <Redirect to=\"/flux\"></Redirect>)}\r\n            {!getUser() && <Redirect to='/signup'></Redirect>}\r\n            {(getUser().completed === \"1\") && <Redirect to='/flux'></Redirect>}\r\n            <div className=\"div--wrap\" >\r\n                <div className=\"div--signup--login\">\r\n                    <div className=\"header--div--signup--login customize--div--photo--page\">\r\n                        <TwitterIcon></TwitterIcon>\r\n                        <button className={\"signup--suivant--button customize--button--photo--page \" + ((disableSuivantButton() || disabledPicPhase) ? 'button--opacity' : \"\")} disabled={disableSuivantButton() || disabledPicPhase ? true : false} onClick={(e) => setClick(e)} type=\"button\" >{appliquerOuPasser(suivant) ? \"Terminer\" : \"Passer pour le moment\"}</button>\r\n                    </div>\r\n                    <div className=\"body--signup--personnaliser--mdp\">\r\n                        {suivant === 0 && (<div className=\"body--signup\">\r\n                            <h2 className=\"photo--signup--titre\">Choisissez une image de profil</h2>\r\n                            <p>Vous avez un style préféré ? Télécharger le vite.</p>\r\n                            <div className=\"div--image\">\r\n                                <input ref={fileRef} accept=\"image/x-png,image/gif,image/jpeg\" onChange={handleImage} type=\"file\" name=\"photo\" hidden />\r\n                                <div onClick={() => fileRef.current.click()} className=\"addAphotoIcon\"><AddAPhotoIcon></AddAPhotoIcon></div>\r\n                                <img ref={imageRef} src={picturesPath + \"default-pic.png\"} alt=\"default user\" />\r\n                            </div>\r\n                        </div>)}\r\n                        {suivant === 1 && (<div className=\"body--personnaliser\">\r\n                            <h2 className=\"photo--signup--titre\">Décrivez-vous</h2>\r\n                            <p className=\"paragraphe-above-bio\">Qu'est-ce qui fait de vous une personne spéciale ? Ne reflichissez pas trop et amusez-vous.</p>\r\n                            <Input value={state.description} error={state.errors.description} handleChange={setChange} inputType='text' inputName='description' spanValue=\"Votre biographie\"></Input><br></br>\r\n                        </div>)}\r\n                        {suivant === 2 && (<div className=\"body--mdp\">\r\n                            <h2 className=\"photo--signup--titre\">Quels sont les sujets qui vous intéressent</h2>\r\n                            <p className=\"paragraphe-above-bio\">Séléectionnez des sujets qui vous intéressent afin de personnaliser votre expérience Twitter, notamment pour trouver des personnes a suivre.</p>\r\n                            <div className=\"subject--container\">\r\n                                {state.subjects.map(value => <Subject key={value.sujet_id} id={value.sujet_id} onClick={handleSelectSubject} subjectLabel={value.sujet}></Subject>)}\r\n                            </div>\r\n                        </div>\r\n                        )}\r\n                        {suivant >= 3 && (<div className=\"body--mdp\">\r\n                            <h2 className=\"photo--signup--titre\">Suggestions d'abonnements</h2>\r\n                            <h5 className=\"paragraphe-above-bio h5--suggestions\">Quand vous suivez quelqu'un, vous voyez ses Tweets dans votre fil d'actualités.</h5>\r\n                            <h3 className=\"paragraphe-above-bio h3--suggestions\">Vous pourriez être intéressé par</h3>\r\n                            <div className=\"user--container\">\r\n                                {state.suggestedUsers.map(user => <User key={user.user_id} onClick={onSuivre} id={user.user_id} nom={user.nom} prenom={user.prenom} photo={user.photo} description={user.description} isFollowed={user.isFollowed}></User>)}\r\n                            </div>\r\n\r\n                        </div>)}\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        </Fragment>\r\n    )\r\n};\r\n","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\services\\auth.js",[],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\subject.jsx",[],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\services\\getSubjects.js",[],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\user.jsx",[],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\services\\getSuggestedUsers.js",[],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\home.jsx",[],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\sideBar.jsx",[],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\redirectToHome.jsx",[],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\homeHead.jsx",[],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\post.jsx",[],["115","116"],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\services\\getPosts.js",[],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\login.jsx",[],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\flux.jsx",[],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\followNewUsers.jsx",["117"],"import React, { useState, useEffect, Fragment } from 'react';\r\nimport http, { cookies } from './../services/httpService.js';\r\nimport serverPath from './../services/serverPath.js';\r\nimport { getUser } from './../services/auth.js';\r\nimport getSuggestedUsers from '../services/getSuggestedUsers.js';\r\nimport { toast } from 'react-toastify';\r\nimport User from \"./user\"\r\nimport \"./../css/followNewUsers.css\"\r\n\r\n\r\nconst followToSend = (prop, value) => {\r\n    const data = new FormData();\r\n    data.append(prop, value);\r\n    return data;\r\n}\r\n\r\nconst FollowNewUsers = () => {\r\n    const [state, setState] = useState({ suggestedUsers: [] });\r\n\r\n    useEffect(() => {\r\n        const fetchSuggestedUsers = async () => {\r\n            const suggestedUsers = await getSuggestedUsers();\r\n            setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    suggestedUsers\r\n                }\r\n            })\r\n        };\r\n        if (getUser()) {\r\n            if (getUser().completed === \"1\") {\r\n                fetchSuggestedUsers();\r\n            }\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    const onSuivre = async (e) => {\r\n        let target = e.currentTarget;\r\n        if (e.currentTarget.classList.contains(\"suivre--active\")) {\r\n            e.currentTarget.classList.remove(\"suivre--active\");\r\n            e.currentTarget.innerHTML = \"Suivre\";\r\n            let unfollowed_id = e.currentTarget.id;\r\n            try {\r\n                const { data, headers } = await http.post(\r\n                    serverPath + 'abandonne.php',\r\n                    followToSend(\"unfollowed_id\", unfollowed_id),\r\n                    http.urlEncoded(cookies.get(\"x-auth-token\"))\r\n                );\r\n                toast.success(data);\r\n                if (headers['x-auth-token']) {\r\n                    cookies.remove(\"x-auth-token\");\r\n                    cookies.set('x-auth-token', headers['x-auth-token'], {\r\n                        path: '/',\r\n                        maxAge: 3600 * 24 * 30 * 12\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                e.currentTarget.classList.add(\"suivre--active\");\r\n                e.currentTarget.innerHTML = \"Abonné\";\r\n                toast.error(error.response);\r\n            }\r\n        } else {\r\n            let target = e.currentTarget;\r\n            target.classList.add(\"suivre--active\");\r\n            e.currentTarget.innerHTML = \"Abonné\";\r\n            let followed_id = target.id;\r\n            try {\r\n                const { data, headers } = await http.post(\r\n                    serverPath + 'suivre.php',\r\n                    followToSend(\"followed_id\", followed_id),\r\n                    http.urlEncoded(cookies.get(\"x-auth-token\"))\r\n                );\r\n                toast.success(data);\r\n                if (headers['x-auth-token']) {\r\n                    cookies.remove(\"x-auth-token\");\r\n                    cookies.set('x-auth-token', headers['x-auth-token'], {\r\n                        path: '/',\r\n                        maxAge: 3600 * 24 * 30 * 12\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                target.classList.remove(\"suivre--active\");\r\n                target.innerHTML = \"Suivre\";\r\n                toast.error(error.response);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"flux--container--head\">\r\n                Listes\r\n            </div>\r\n            <div className=\"replace--flux--head\"></div>\r\n            <div className=\"user--container customize--list--container\">\r\n                {state.suggestedUsers.map(user => <User key={user.user_id} onClick={onSuivre} id={user.user_id} nom={user.nom} prenom={user.prenom} photo={user.photo} description={user.description} isFollowed={user.isFollowed}></User>)}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default FollowNewUsers;","C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\services\\getRetweetedPosts.js",[],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\components\\retweetedPost.jsx",[],"C:\\Users\\JetbrainArb\\Desktop\\twitter-fe\\src\\services\\picturesPath.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":9,"column":12,"nodeType":"124","messageId":"125","endLine":9,"endColumn":17},{"ruleId":"122","severity":1,"message":"126","line":298,"column":13,"nodeType":"124","messageId":"125","endLine":298,"endColumn":19},{"ruleId":"118","replacedBy":"127"},{"ruleId":"120","replacedBy":"128"},{"ruleId":"122","severity":1,"message":"126","line":41,"column":13,"nodeType":"124","messageId":"125","endLine":41,"endColumn":19},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'focus' is assigned a value but never used.","Identifier","unusedVar","'target' is assigned a value but never used.",["129"],["130"],"no-global-assign","no-unsafe-negation"]